/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var M=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var q=Object.getOwnPropertyNames;var R=Object.prototype.hasOwnProperty;var W=(s,n)=>{for(var t in n)M(s,t,{get:n[t],enumerable:!0})},G=(s,n,t,e)=>{if(n&&typeof n=="object"||typeof n=="function")for(let r of q(n))!R.call(s,r)&&r!==t&&M(s,r,{get:()=>n[r],enumerable:!(e=V(n,r))||e.enumerable});return s};var U=s=>G(M({},"__esModule",{value:!0}),s);var X={};W(X,{default:()=>j});module.exports=U(X);var d=require("obsidian");var h=require("obsidian"),k={journalFolder:"journals",dateFormat:"YYYY-MM-DD",sortDirection:"newest-first",defaultExpandEntries:!0,folderFormat:"",entriesPerBatch:10},x=class extends h.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Continuous Journaling Settings"}),new h.Setting(t).setName("Journal Folder").setDesc("Specify the folder where journal entries will be stored").addText(e=>e.setPlaceholder("journals").setValue(this.plugin.settings.journalFolder).onChange(async r=>{this.plugin.settings.journalFolder=r.replace(/^\/+|\/+$/g,""),await this.plugin.saveSettings()})),new h.Setting(t).setName("Date Format").setDesc("Format for journal filenames (YYYY-MM-DD recommended)").addText(e=>e.setPlaceholder("YYYY-MM-DD").setValue(this.plugin.settings.dateFormat).onChange(async r=>{this.plugin.settings.dateFormat=r,await this.plugin.saveSettings()})),new h.Setting(t).setName("Sort Direction").setDesc("How to sort journal entries in the continuous view").addDropdown(e=>e.addOption("newest-first","Newest entries first").addOption("oldest-first","Oldest entries first").setValue(this.plugin.settings.sortDirection).onChange(async r=>{this.plugin.settings.sortDirection=r,await this.plugin.saveSettings()})),new h.Setting(t).setName("Default Expand Entries").setDesc("Automatically expand entries when opening the journals view").addToggle(e=>e.setValue(this.plugin.settings.defaultExpandEntries).onChange(async r=>{this.plugin.settings.defaultExpandEntries=r,await this.plugin.saveSettings()})),new h.Setting(t).setName("Folder Structure Format (Optional)").setDesc(`Format pattern for organizing journal entries in subfolders.
Examples: empty for flat structure, "YYYY" for yearly folders, "YYYY/MM" for monthly folders.`).addText(e=>e.setPlaceholder("YYYY/MM").setValue(this.plugin.settings.folderFormat).onChange(async r=>{this.plugin.settings.folderFormat=r,await this.plugin.saveSettings()})),new h.Setting(t).setName("Entries Per Page").setDesc("Number of journal entries to load at once").addDropdown(e=>e.addOption("10","10 entries").addOption("25","25 entries").addOption("50","50 entries").setValue(this.plugin.settings.entriesPerBatch.toString()).onChange(async r=>{this.plugin.settings.entriesPerBatch=parseInt(r),await this.plugin.saveSettings()})),new h.Setting(t).setName("Migrate Journal Entries").setDesc("Move existing journal entries to the folder structure defined by the folder format pattern.").addButton(e=>e.setButtonText("Migrate Entries").setCta().onClick(async()=>{await this.plugin.migrateJournalEntries()})),new h.Setting(t).setName("Delete Empty Journal Entries").setDesc("Delete all EMPTY journal entries. This action cannot be undone.").addButton(e=>e.setButtonText("Delete Empty Entries").setCta().setClass("journal-delete-button").onClick(async()=>{await this.plugin.deleteEmptyJournalEntries()}))}};var p=require("obsidian");function Y(){let s=new Date;return z(s)}function z(s){let n=s.getFullYear(),t=String(s.getMonth()+1).padStart(2,"0"),e=String(s.getDate()).padStart(2,"0");return`${n}-${t}-${e}`}function A(s){let n=new Date(s),t={month:"short",year:"numeric",day:"numeric"},e=new Intl.DateTimeFormat("en-US",t).format(n),r=n.getDate(),i=K(r),a=e.split(" ");return`${a[0]} ${r}${i}, ${a[2]}`}function K(s){if(s>3&&s<21)return"th";switch(s%10){case 1:return"st";case 2:return"nd";case 3:return"rd";default:return"th"}}function S(s){return/^\d{4}-\d{2}-\d{2}$/.test(s)}var f=require("obsidian");function H(s,n){return s?`${s}/${n}`:n}async function _(s,n){if(!n)return!0;let t=s.vault.getAbstractFileByPath(n);if(t&&!(t instanceof f.TFolder))return new f.Notice(`Cannot create folder: "${n}" exists but is not a folder`),!1;if(!t)try{return await s.vault.createFolder(n),new f.Notice(`Created folder: ${n}`),!0}catch(e){return new f.Notice(`Failed to create folder: ${e}`),console.error("Failed to create folder:",e),!1}return!0}function $(s,n,t=""){if(!t)return H(s,n);let e=n.split(".")[0];if(!S(e))return H(s,n);let[r,i,a]=e.split("-").map(l=>parseInt(l)),o=t;return o=o.replace("YYYY",r.toString()),o=o.replace("MM",i.toString().padStart(2,"0")),o=o.replace("DD",a.toString().padStart(2,"0")),s?`${s}/${o}/${n}`:`${o}/${n}`}async function L(s,n){let t=n.split("/"),e=t.length-1,r="";for(let i=0;i<e;i++)if(r&&(r+="/"),r+=t[i],!!r&&!await _(s,r))return!1;return!0}async function I(s,n,t,e="",r=""){let i=$(n,t,e);if(!await L(s,i))return null;let a=s.vault.getAbstractFileByPath(i);if(a instanceof f.TFile)return a;try{return a=await s.vault.create(i,r),new f.Notice(`Created journal entry: ${t}`),a}catch(o){return new f.Notice(`Failed to create journal entry: ${o}`),console.error("Failed to create journal entry:",o),null}}function Q(s,n,t){if(!S(s.basename))return!1;if(!n)return!0;if(t){let r=s.basename.split(".")[0],[i,a,o]=r.split("-"),l=t;l=l.replace("YYYY",i),l=l.replace("MM",a),l=l.replace("DD",o);let c=`${n}/${l}`;return s.path.startsWith(c)}return s.path.startsWith(n+"/")}function w(s,n,t){return s.vault.getMarkdownFiles().filter(r=>Q(r,n,t))}function N(s,n){return s.sort((t,e)=>n==="newest-first"?e.basename.localeCompare(t.basename):t.basename.localeCompare(e.basename))}var T=class{constructor(n){this.activeEditor=null;this.allFiles=[];this.currentBatch=0;this.loadMoreButton=null;this.plugin=n,this.registerCleanup()}async open(){let n=this.plugin.app.workspace.getLeaf(!0);await n.setViewState({type:"markdown",active:!0});let t=n.view.containerEl;t.empty();let e=t.createDiv({cls:"custom-journal-panel"}),r=w(this.plugin.app,this.plugin.settings.journalFolder,this.plugin.settings.folderFormat);if(r.length===0){new p.Notice("No journal entries found."),e.createEl("div",{cls:"journal-empty-state",text:"No journal entries found. Create one by clicking the journals icon in the ribbon."});return}this.allFiles=N(r,this.plugin.settings.sortDirection),this.currentBatch=0,await this.loadBatch(e),this.currentBatch*this.plugin.settings.entriesPerBatch<this.allFiles.length&&this.addLoadMoreButton(e)}async loadBatch(n){let t=this.plugin.settings.entriesPerBatch,e=this.currentBatch*t,r=Math.min(e+t,this.allFiles.length);n.querySelectorAll(".journal-load-more-button").forEach(a=>a.remove()),this.loadMoreButton=null;let i=this.allFiles.slice(e,r);for(let a of i)try{let o=await this.plugin.app.vault.read(a);this.addJournalEntry(n,a,o)}catch(o){console.error(`Error reading file ${a.path}:`,o),this.addErrorMessage(n,a.basename,o)}this.currentBatch++,n.querySelectorAll(".journal-load-more-button").forEach(a=>a.remove()),this.currentBatch*this.plugin.settings.entriesPerBatch<this.allFiles.length&&this.addLoadMoreButton(n)}addLoadMoreButton(n){n.querySelectorAll(".journal-load-more-button").forEach(e=>e.remove());let t=this.plugin.settings.entriesPerBatch;this.loadMoreButton=n.createEl("button",{cls:"journal-load-more-button",text:`Load ${t} More Entries`}),n.appendChild(this.loadMoreButton),this.loadMoreButton.addEventListener("click",async()=>{this.loadMoreButton&&(this.loadMoreButton.textContent="Loading...",this.loadMoreButton.setAttr("disabled","true")),await this.loadBatch(n)})}addErrorMessage(n,t,e){let r=n.createDiv({cls:"journal-entry journal-error"});r.createDiv({cls:"journal-entry-header"}).createEl("h3",{cls:"journal-entry-title",text:`${t} - Error`});let a=r.createDiv({cls:"journal-error-content"});a.textContent=`Failed to load journal: ${e.message||e}`}addJournalEntry(n,t,e){let r=t.basename,i=n.createDiv({cls:"journal-entry"}),a=i.createDiv({cls:"journal-entry-header"}),o=a.createEl("button",{cls:"collapsible-toggle"});this.plugin.settings.defaultExpandEntries&&o.addClass("toggle-expanded"),a.createEl("h3",{cls:"journal-entry-title"}).createEl("a",{cls:"journal-entry-link",text:A(r)}).addEventListener("click",y=>{y.preventDefault(),this.plugin.app.workspace.openLinkText(t.basename,t.path)});let g=i.createDiv({cls:"collapsible-content"+(this.plugin.settings.defaultExpandEntries?" content-expanded":"")}),v=e,D=!1,E=g.createDiv({cls:"rendered-content active-view"}),u=g.createEl("textarea",{cls:"editable-content",value:v}),F=g.createEl("button",{cls:"journal-close-button",text:"Close"});F.style.display="none";let m=g.createDiv({cls:"journal-save-indicator",text:"Saved"});m.style.display="none",window.requestAnimationFrame(()=>{u.style.height=u.scrollHeight+"px"});let B=()=>{E.empty(),p.MarkdownRenderer.render(this.plugin.app,v,E,t.path,this.plugin),this.makeHashtagsClickable(E)};B();let O=()=>{D=!0,this.activeEditor=u,u.value=v,E.classList.remove("active-view"),u.classList.add("active-view"),F.style.display="block",u.style.height="auto",u.style.height=u.scrollHeight+"px",u.focus()},J=async()=>{D&&(v=u.value,await this.saveContentToFile(t,v),B(),u.classList.remove("active-view"),F.style.display="none",E.classList.add("active-view"),D=!1,this.activeEditor===u&&(this.activeEditor=null))};E.addEventListener("click",y=>{let b=y.target;b.tagName==="A"||b.closest("a")||b.classList.contains("cm-hashtag")||b.closest(".cm-hashtag")||O()}),F.addEventListener("click",()=>{J()}),u.addEventListener("keydown",y=>{y.key==="Escape"&&J()}),u.addEventListener("input",()=>{u.style.height="auto",u.style.height=u.scrollHeight+"px",v=u.value});let C=null;u.addEventListener("input",()=>{m.style.display="block",m.classList.remove("saved"),m.classList.add("saving"),m.textContent="Saving...",C&&clearTimeout(C),C=setTimeout(async()=>{await this.saveContentToFile(t,v),m.classList.remove("saving"),m.classList.add("saved"),m.textContent="Saved",setTimeout(()=>{m.classList.contains("saved")&&(m.style.display="none")},2e3)},500)}),o.addEventListener("click",()=>{o.classList.toggle("toggle-expanded"),g.classList.toggle("content-expanded")})}async saveContentToFile(n,t){try{await this.plugin.app.vault.modify(n,t)}catch(e){new p.Notice(`Failed to save changes: ${e}`),console.error("Failed to save changes:",e)}}insertFileReference(n){if(!this.activeEditor){new p.Notice("No active journal entry to insert file into");return}let t=this.plugin.app.vault.getAbstractFileByPath(n);if(!(t instanceof p.TFile)){new p.Notice("Invalid file");return}let e;this.isImageFile(t)?e=`![[${t.name}]]`:this.isMarkdownFile(t)?e=`![[${t.name}]]`:e=`![[${t.name}]]`,this.activeEditor.focus();let r=this.activeEditor.selectionStart,i=this.activeEditor.value.substring(0,r),a=this.activeEditor.value.substring(this.activeEditor.selectionEnd),o=i+e+a;this.activeEditor.value=o;let l=r+e.length;this.activeEditor.setSelectionRange(l,l);let c=new Event("input",{bubbles:!0,cancelable:!0});this.activeEditor.dispatchEvent(c),new p.Notice(`Inserted reference to ${t.name}`)}isImageFile(n){let t=["png","jpg","jpeg","gif","svg","webp"],e=n.extension.toLowerCase();return t.includes(e)}isMarkdownFile(n){let t=n.extension.toLowerCase();return t==="md"||t==="markdown"}registerCleanup(){this.plugin.registerEvent(this.plugin.app.workspace.on("layout-change",()=>{if(this.activeEditor){if(this.activeEditor.closest(".journal-entry")){let t=new KeyboardEvent("keydown",{key:"Escape"});this.activeEditor.dispatchEvent(t)}this.activeEditor=null}}))}makeHashtagsClickable(n){n.querySelectorAll(".cm-hashtag, .tag").forEach(e=>{var r;if(e instanceof HTMLElement){let i=e.cloneNode(!0);(r=e.parentNode)==null||r.replaceChild(i,e),i.addEventListener("click",a=>{var l;a.preventDefault(),a.stopPropagation();let o=((l=i.textContent)==null?void 0:l.trim())||"";this.openSearchWithHashtag(o)}),i.style.cursor="pointer"}})}openSearchWithHashtag(n){var e,r,i,a;let t=n.startsWith("#")?n:`#${n}`;try{let o=this.plugin.app;if((r=(e=o.internalPlugins)==null?void 0:e.getPluginById("global-search"))!=null&&r.instance.openGlobalSearch){(i=o.internalPlugins.getPluginById("global-search"))==null||i.instance.openGlobalSearch(t);return}if((a=o.commands)!=null&&a.executeCommandById("global-search:open")){setTimeout(()=>{let c=document.querySelector(".search-input-container input");c instanceof HTMLInputElement&&(c.value=t,c.dispatchEvent(new Event("input",{bubbles:!0})))},100);return}let l=this.plugin.app.workspace.getLeavesOfType("search")[0];if(l){this.plugin.app.workspace.setActiveLeaf(l,{focus:!0}),setTimeout(()=>{let c=document.querySelector(".search-input-container input");c instanceof HTMLInputElement&&(c.value=t,c.dispatchEvent(new Event("input",{bubbles:!0})))},100);return}new p.Notice(`Search for: ${t}`)}catch(o){console.error("Error opening search:",o),new p.Notice(`Could not open search. Please search for: ${t}`)}}};var j=class extends d.Plugin{async onload(){await this.loadSettings(),this.journalView=new T(this),this.addRibbonIcon("notepad-text","Open Journals",async e=>{await this.openJournalView()}).addClass("journaling-ribbon-icon"),this.addCommand({id:"open-journal-view",name:"Open Journal View",callback:()=>{this.openJournalView()}}),this.addCommand({id:"create-todays-journal",name:"Create/Open Today's Journal",callback:()=>{this.createTodaysJournal()}}),this.addSettingTab(new x(this.app,this)),this.registerEvent(this.app.workspace.on("file-menu",(e,r)=>{r instanceof d.TFile&&e.addItem(i=>{i.setTitle("Insert into Journal").setIcon("text-cursor-input").onClick(()=>{let a=this.journalView;a?a.insertFileReference(r.path):new d.Notice("Open the journal view first to insert file reference")})})}))}async openJournalView(){await this.createTodaysJournal(),await this.journalView.open()}async createTodaysJournal(){let e=`${Y()}.md`;if(!await I(this.app,this.settings.journalFolder,e,this.settings.folderFormat)){new d.Notice("Failed to create or open today's journal");return}}async loadSettings(){this.settings=Object.assign({},k,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async migrateJournalEntries(){let t=w(this.app,this.settings.journalFolder,"");if(t.length===0){new d.Notice("No journal entries found to migrate.");return}if(!this.settings.folderFormat){new d.Notice("Please set a folder format in settings before migrating.");return}let e=`Migrate ${t.length} journal entries to new folder structure? This will:
    1. Move files to folders based on the pattern: ${this.settings.folderFormat}
    2. Create any necessary folders
    3. Keep the original filename
    
    This operation cannot be undone automatically.`;if(!confirm(e))return;let r=new P(this.app,t.length);r.open();let i=0,a=0;for(let o of t)try{r.updateStatus(`Migrating ${o.name}...`);let l=$(this.settings.journalFolder,o.name,this.settings.folderFormat);if(o.path===l){i++,r.updateProgress(i);continue}let c=await this.app.vault.read(o);await L(this.app,l),await this.app.vault.create(l,c),await this.app.vault.delete(o),i++,r.updateProgress(i)}catch(l){console.error(`Error migrating file ${o.path}:`,l),r.updateStatus(`Error migrating ${o.name}: ${l}`),a++}r.updateStatus(`Migration complete! Migrated ${i} files with ${a} errors.`),setTimeout(()=>{r.close(),new d.Notice(`Migration complete! Migrated ${i} files with ${a} errors.`)},3e3)}async deleteEmptyJournalEntries(){let t=w(this.app,this.settings.journalFolder,this.settings.folderFormat);if(t.length===0){new d.Notice("No journal entries found to check.");return}let e=`Do you want to proceed with scanning ${t.length} journal entries?`;if(!confirm(e))return;new d.Notice("Scanning for empty journal entries...");let r=[],i=0,a=c=>c.trim().length===0;for(let c of t)try{let g=await this.app.vault.read(c);a(g)&&r.push(c)}catch(g){console.error(`Error scanning file ${c.path}:`,g),i++}if(r.length===0){new d.Notice("No empty journal entries found.");return}let o=`${r.length} empty journal ${r.length===1?"entry was":"entries were"} found.
        
        Do you want to proceed with the deletion? This operation cannot be undone.`;if(!confirm(o))return;new d.Notice(`Deleting ${r.length} empty journal entries...`);let l=0;i=0;for(let c of r)try{await this.app.vault.delete(c),l++}catch(g){console.error(`Error deleting file ${c.path}:`,g),i++}i>0?new d.Notice(`Deleted ${l} out of ${r.length} empty journal entries. ${i} errors occurred.`,5e3):new d.Notice(`Successfully deleted ${l} empty journal entries.`,5e3),l>0&&this.journalView&&this.journalView.open()}},P=class extends d.Modal{constructor(t,e){super(t);this.totalFiles=e}onOpen(){let{contentEl:t}=this;t.createEl("h2",{text:"Migrating Journal Entries"}),this.progressEl=t.createEl("div",{cls:"migration-progress",text:"0/"+this.totalFiles}),this.statusEl=t.createEl("div",{cls:"migration-status",text:"Starting migration..."})}updateProgress(t){this.progressEl.textContent=`${t}/${this.totalFiles}`}updateStatus(t){this.statusEl.textContent=t}onClose(){let{contentEl:t}=this;t.empty()}};
